<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Fragments&#39; Blog</title>
  
  <subtitle>zz</subtitle>
  <link href="http://blog.fragments.work/atom.xml" rel="self"/>
  
  <link href="http://blog.fragments.work/"/>
  <updated>2024-03-22T14:52:58.555Z</updated>
  <id>http://blog.fragments.work/</id>
  
  <author>
    <name>Fragments WANG</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>网络原理: 物理层</title>
    <link href="http://blog.fragments.work/2024/03/22/ComputerNetwork/Ch2/"/>
    <id>http://blog.fragments.work/2024/03/22/ComputerNetwork/Ch2/</id>
    <published>2024-03-22T14:52:00.000Z</published>
    <updated>2024-03-22T14:52:58.555Z</updated>
    
    <content type="html"><![CDATA[<h1>Ch2: 物理层</h1><h2 id="1-1-物理层的基本概念">1.1 物理层的基本概念</h2><h3 id="1-1-1-物理层的主要任务">1.1.1 物理层的主要任务:</h3><blockquote><p>物理层的传输媒介和通信手段差别很大，种类多样。物理层的作用就是尽可能地屏蔽这些传输媒体和通信手段的差异。</p></blockquote><blockquote><p>物理层的协议也被称为是物理层<strong>规程</strong>。</p></blockquote><p>物理层的主要任务有:</p><ol><li><strong>机械特性</strong>: 指明接口所用的接线器的尺寸和形状，引脚数目和排列，固定和锁定装置。接插件的规格。</li><li><strong>电气特性</strong>: 接口电缆上电压的范围</li><li><strong>功能特性</strong>: 某条线上电平的电压的含义</li><li><strong>过程特性</strong>: 不同功能的事件出现的顺序</li><li>传输方式的转变: 并串行转换</li></ol><h2 id="1-2-数据通信的基本知识">1.2 数据通信的基本知识</h2><blockquote><p>通信的目的是传输<strong>消息</strong>。</p><p><strong>数据</strong>是运送<strong>消息</strong>的实体，一般是有意义的符号序列。</p><p><strong>信号</strong>是<strong>数据</strong>在电气/电子中的具体表现。</p></blockquote><blockquote><p><font color="red">定义</font>：<strong>码元</strong>指的是代表不同离散数值的基本波形。比如高低电平分别代表离散值0/1，则高电平和低电平都是<strong>码元</strong>。</p></blockquote><blockquote><p>比特率: 每秒钟传送的<strong>比特数</strong>(bps)</p><p>波特率: 每秒钟传送的<strong>码元数</strong>(码元/秒)</p></blockquote><p>以上两个量用来描述信道的<strong>传输速率</strong>。</p><blockquote><p>$$<br>比特率 = 波特率 * 每个码元携带的比特数<br>$$</p><p><font color="red">请注意是每个码元携带的信息的比特数，而非码元数！！</font></p></blockquote><blockquote><p>例题: 若某通信链路的数据传输速率为2400bps,采用4相位调制,则该链路的波特率是?</p></blockquote><h3 id="1-2-1-通信的简单模型">1.2.1 通信的简单模型</h3><p>用一个简单的模型来建立数据通信系统的模型。<br>$$<br>源点(source) \xrightarrow{数字信号} 发送器(调制器) \xrightarrow{模拟信号} 传输系统 \xrightarrow{模拟信号}  接收器(解调器)\xrightarrow{数字信号}终点(destination)<br>$$</p><ul><li><strong>源点</strong>(source): 源点产生要传输的数据。一般是计算机产生用户想要发送的消息的数据。也称为<strong>源头</strong>或<strong>信源</strong>。</li><li><strong>发送器</strong>一般是调制器。源点产生的数字比特流一般要经过发送器编码以后才能够在传输系统中进行传输。</li><li><strong>接收器</strong>一般是解调器。收到的信号一般要经过解码才能提取出要传输的数据。</li><li><strong>终点</strong>处理要传输的数据。也叫<strong>目的站</strong>，<strong>信宿</strong>。</li></ul><h3 id="1-2-2-信道">1.2.2 信道</h3><h4 id="1-2-2-1-信道基本概念">1.2.2.1 信道基本概念</h4><blockquote><p>定义$1.2.2.1$：<strong>信道</strong>一般指<strong>向某一个方向</strong>传送信息的媒体。</p><p>因此一般通信电路包含一个发送信道和一条接收信道。</p></blockquote><p>按照通信双方的交互可以把通信分为：</p><ul><li>单向通信: 只有一个方向的交互</li><li>双向交替通信(半双工通信): 支持双向通信，但不能双方同时发送或者同时接收。一个时间一定是一方发送一方接收。</li><li>双向同时通信(全双工通信): 通信双方可以同时发送/接收消息。</li></ul><blockquote><p><strong>单工</strong>指的是半双工，而不是单向通信。</p></blockquote><h4 id="1-2-2-2-信道极限容量">1.2.2.2 信道极限容量</h4><p>高频分量在信道中传播时会衰减，每一个<strong>码元</strong>在时间轴上会有拉伸。</p><blockquote><p>定义$1.2.2.2$: 如果接收端上收到的信号波形失去了<strong>码元</strong>之间的清楚界限，则无法再恢复成原来分离的码元，这种现象叫做<strong>码间干扰</strong>。</p></blockquote><p>为了避免这个码间干扰，信号在信道中的频率过大。<strong>在理想情况下</strong>这个最大频率可以由<strong>奈奎斯特定理</strong>给出</p><blockquote><p><strong>奈奎斯特定理</strong> : 在任何信道中，码元传输的速率$C$是有上限的，如果超过这个上限，就会出现严重的码间干扰现象，使得接收端判定码元变为不可能。<br>$$<br>C = 2*\omega*log_2V(bps)<br>$$<br>其中$\omega$为信道的带宽(信道能够传输的最大频率)，$V$为码元总个数。</p></blockquote><p>然而现实中的情况可能并不是理想状况，存在噪声。噪声的影响和时间有关，有时影响大，有时影响小。刻画影响大小的量是<strong>信噪比</strong>。</p><blockquote><p>定义$1.2.2.3$ <strong>信噪比</strong>是信号的<strong>平均功率</strong>和噪声的<strong>平均功率</strong>之比，常记为$S/N$。并用**分贝(db)**作为度量单位。具体的换算公式是：<br>$$<br>t(S/N) \Leftrightarrow 10*log_{10}t(db)<br>$$</p></blockquote><p>描述有噪声情况下的最大频率可以用<strong>香农定理</strong>。</p><blockquote><p><strong>香农定理</strong>：在有噪声的信道中信道的极限传输速率$C$是:<br>$$<br>C = \omega * log_2(1 + S/N) = \omega <em>log_2(\frac{N + S}{N}) = \omega</em>(log_2(N+S) - log_2N))<br>$$<br>其中$\omega$为信道的带宽。$S/N$越大，信道的极限传输速率也越大。</p></blockquote><blockquote><p>当传输速率$C$低于香农定理得到的极限速率$C_{max}$，就说明一定存在一种传输方法可以使得传输速率更加快。</p></blockquote><blockquote><p>当信道的带宽$\omega$和信噪比$S/N$都不能再增大时，可以通过<strong>提高码元的总数量</strong>，也就是提高每一个码元所携带的信息量来提高信道的极限传输速率。</p></blockquote><h3 id="1-2-3-调制与解调">1.2.3 调制与解调</h3><blockquote><p>定义$1.2.3.1$: 来自信源的信号常被称为<strong>基带信号</strong>。一般是被计算机直接输出的信号(大部分是数字信号)，包含<strong>较多的低频成分和直流成分。</strong></p></blockquote><p>信道并大概率不能直接传输基带信号。因此要进行<strong>调制</strong>。</p><p>调制一般分为<strong>基带调制</strong>和<strong>带通调制</strong>两大类。</p><h4 id="1-2-3-1-基带调制-编码">1.2.3.1 基带调制(编码)</h4><blockquote><p>定义$1.2.3.2$：<strong>基带调制</strong>是把数字信号转换为另一种形式的数字信号。也被称为<strong>编码</strong>。</p></blockquote><p>常用的编码方式有:</p><ol><li>不归零制: 正<strong>电平</strong>/负<strong>电平</strong>代表1/0</li><li>归零制: 正<strong>脉冲</strong>/负<strong>脉冲</strong>代表1/0</li><li>曼彻斯特编码: 每个<strong>周期中心</strong>的<font color="red">向上跳变代表0，向下跳变代表1</font></li><li>差分曼彻斯特编码: 每个周期中心都有跳变。在每个周期<strong>开始时</strong><font color="red">如果有跳变代表0，无跳变代表1。</font></li></ol><blockquote><p>曼彻斯特编码的变化比起非归零型编码更加<strong>频繁</strong>，说明曼彻斯特编码的频率会比不归零型编码高。</p></blockquote><blockquote><p>曼彻斯特编码具有<strong>自同步的能力</strong>(?)而不归零制却没有       ----why? 待解决的一个小问题</p></blockquote><h4 id="1-2-3-2-带通调制-使用载波进行调制">1.2.3.2 带通调制(使用载波进行调制)</h4><blockquote><p>定义$1.2.3.3$: 通过<strong>载波(carrier)<strong>把频带搬迁到更高的频率范围，并转换为</strong>模拟信号</strong>，这个过程叫做<strong>带通调制</strong>。调制后的信号叫做<strong>带通信号</strong>。</p></blockquote><p>基本的调制方法有:</p><ol><li>调幅(AM): 不同的数字信号映射为不同幅度值的信号</li><li>调频(FM): 不同的数字信号映射为不同频率的信号</li><li>调相(PM): 不同的数字信号映射为不同初相位的信号</li></ol><p>可以把这些基本的调制方法合在一起，比如把调幅和调相结合在一起的<strong>正交振幅调制(QAM)</strong>。</p><h2 id="1-3-物理层中的传输媒介">1.3 物理层中的传输媒介</h2><blockquote><p>信号在物理层中传输的媒介主要分为两种，一种是电磁波被<strong>导引</strong>沿着固体媒体(铜线或者光纤)传播，称为<strong>导引型媒介</strong>，另一种是在自由空间中进行无线传输，叫做<strong>非导引型媒介</strong>。</p></blockquote><h3 id="1-3-1-导引型媒介">1.3.1 导引型媒介</h3><h4 id="1-3-1-1-绞线">1.3.1.1 绞线</h4><blockquote><p><strong>绞线</strong>是把两根相互绝缘的铜导线并排放在一起，再通过<strong>绞合</strong>在一起。好处是<strong>绞合</strong>在一起的铜导线对相邻的电磁干扰很小。</p><p><strong>绞线</strong>越粗，传播距离越远，价格越高。</p></blockquote><blockquote><p>使用<strong>绞线</strong>最多的系统是<strong>电话系统</strong>。</p></blockquote><blockquote><p><strong>绞线</strong>按照外层<strong>有无金属丝屏蔽层</strong>分为<strong>无屏蔽双绞线(UTP)</strong>(Unshielded Twisted Pair)和<strong>屏蔽双绞线(STP)</strong>(Shielded Twisted Pair)。</p></blockquote><h4 id="1-3-1-2-同轴电缆">1.3.1.2 同轴电缆</h4><blockquote><p><strong>同轴电缆</strong>是由内部铜芯，绝缘层、网状外导体屏蔽层以及保护塑料外层组成的传输介质。抗干扰能力很强。用来传输高速数据。<strong>现在已经很少使用</strong></p></blockquote><h4 id="1-3-1-3-光纤和光缆">1.3.1.3 光纤和光缆</h4><blockquote><p><strong>光纤</strong>是利用光导纤维(全反射)传递光脉冲的传输媒介。由内部的石英玻璃拉成丝和外部包层构成双层圆柱体。<strong>直径只有$8-100um$</strong>。</p></blockquote><blockquote><p>由于光全反射角度不唯一，只需要大于临界角度即可。因此一条光纤可以有很多束<strong>不同角度</strong>的光线同时传输。这样的光纤叫做<strong>多模光纤</strong>。但是由于光线在多模光纤中易展宽失真，因此<strong>多模光纤只适用于近距离传输</strong>。</p></blockquote><blockquote><p>也可以把光纤的内芯做得非常细，使得只允许<strong>一条光线</strong>近乎于<strong>直线传播</strong>，这样的光纤叫做<strong>单模光纤</strong>。<strong>单模光纤</strong>贵，但是损耗非常小，能无损耗地在极高速度下传输。</p></blockquote><blockquote><p>一般把非常非常细的光纤包在一起，加上填充物组成物理抗性比较好的<strong>光缆</strong>。</p></blockquote><p>光纤传输的有点有:</p><ol><li>通信容量大，速度快</li><li>损耗小，中继距离长</li><li>抗雷电抗干扰能力很强</li><li>保密性好</li><li>轻便</li></ol><h4 id="1-3-1-4-架空明线">1.3.1.4 架空明线</h4><blockquote><p><strong>架空明线</strong>是在电线杆上架设互相绝缘的明线的传输介质，现在已经几乎不适用。</p></blockquote><h3 id="1-3-2-非导引型媒介">1.3.2 非导引型媒介</h3><h4 id="1-3-2-1-短波通信">1.3.2.1 短波通信</h4><blockquote><p>短波通信质量比较差，而且传输速率也不高。</p></blockquote><h4 id="1-3-2-2-微波通信">1.3.2.2 微波通信</h4><blockquote><p>微波通信在数据通信中地位很重要。主要使用$2\to 40GHz$的频率范围。一般的微波通信有<strong>地面微波接力通信</strong>和<strong>卫星通信</strong>两种形式。</p></blockquote><blockquote><p><strong>地面微波接力通信</strong>是指在地面上在两个终端之间建立若干个<strong>中继站</strong>的形式。频段很宽，容量也很大，其他电磁干扰小。传输质量非常高。</p><p><strong>卫星通信</strong>的特点是**<font color="red">传播</font>时延长**，<strong>通信距离远</strong>。</p></blockquote><h4 id="1-3-2-3-红外通信">1.3.2.3 红外通信</h4><h4 id="1-3-2-4-激光通信">1.3.2.4 激光通信</h4><h2 id="1-4-信道复用技术">1.4 信道复用技术</h2><h3 id="1-4-1-频分复用">1.4.1 频分复用</h3><blockquote><p>如果不同用户分别在<strong>同一时间</strong>占用信道的<strong>不同频率范围</strong>，则是<strong>频分复用(FDM)</strong>(Frequency Division Multiplexing)。</p></blockquote><h3 id="1-4-2-时分复用">1.4.2 时分复用</h3><blockquote><p>如果不同用户分别在<strong>不同时间</strong>占用信道的<strong>同一</strong>频率范围，则是<strong>时分复用(TDM)</strong>(Time Division Multiplexing)。</p><p>一般是每一个用户占用相同的一段时间，这一段时间被称为<strong>时分复用帧(TDM帧)</strong>。</p></blockquote><p>频分复用和时分复用技术成熟，但是<strong>不够灵活</strong>。</p><p>由于计算机网络传输数据往往具有突发性，像这样一段时间一直只有某一个用户占用信道（同步时分复用）利用率并不高，因此引入改进的时分复用模式: <strong>统计时分复用(STDM)</strong>(Statistic Time Division Multiplexing)。</p><blockquote><p><strong>统计分时复用</strong>: 引入<strong>集中器</strong>和<strong>STDM帧</strong>，STDM帧的个数一般比用户个数少。用户将要发送的数据先发送到集中器的缓冲区，由集中器扫描缓冲区将数据放到STDM帧上，只有当STDM帧满后才统一发送。也叫做<strong>异步时分复用</strong>。</p></blockquote><p>![](C:\Users\FragmentsZ\OneDrive - <a href="http://ahu.edu.cn">ahu.edu.cn</a>\AHU-CS\计算机网络\笔记\imgs\ch2_2.png)</p><p>统计时分复用存在的问题:</p><ol><li><strong>统计时分复用必须要添加一些&quot;头信息&quot;来告诉发送模块究竟是哪一个用户发送的数据包。</strong></li><li>统计时分复用在所有用户都不断发送数据的时候无法应付，建立在<strong>用户都是间歇性发送数据</strong>的假设上。</li></ol><hr><p>假设使用的是频分复用，每一个用户都要占据一定的频带宽度，当用户变多时信道的频带宽度一定会很大。</p><p>假设使用的是时分复用，每一个用户都要占据一定的时间宽度，意味着要在短时间内发送脉冲信号，时间宽度窄的脉冲信号的频率肯定也会加大。</p><hr><h3 id="1-4-3-波分复用">1.4.3 波分复用</h3><blockquote><p><strong>波分复用(WDM)</strong>(Wavelength Division Multiplexing)就是光的频分复用。也就是不同的数据信号在不同的波段上进行传输。</p><p>不过光信号在传播了一定时间后会衰减， 所以在端到端之间还要加入**掺铒光纤放大器(EDFA)**来放大光信号。</p></blockquote><h3 id="1-4-4-码分复用">1.4.4 码分复用</h3><blockquote><p><strong>码分复用(CDM)</strong>(Code Division Multiplexing)是另一种共享信道传输的方式。也叫做<strong>码分多址(CDMA)</strong>(Code Division Multiple Access)</p></blockquote><p>一个$CDMA$系统里每一个可发送传输信号的站点都具有一个$n$位0/1的<strong>码片序列$S_i$</strong>。<font color="red">$n$一般取64或128。</font></p><p>如果该站点要发送数字信号$1$则发送该码片序列$S_i$，如果要发送$0$则发送该码片序列的反码$\overline S_i$。</p><p>并且要保证每一个站点的码片序列$S_i$映射的向量$\vec{S_i}$要满足正交，即<br>$$<br>\begin{align}<br>\vec{S_i} = ({1|{-1},1|-1,\cdots,1|-1)} \quad\quad &amp;其中若S_{ik}=1,则\vec{S_{ik}}=1,否则为0\<br>\vec{S_i}*\vec{S_j} = 0 ,\quad \quad\quad &amp; i\ne j<br>\end{align}<br>$$<br>每一个站点发送的信号都会在振幅上叠加。</p><p>要是想得到站点$i$发送的数字信号，则需要将得到的信号点乘上对应的码片序列$\frac{1}{n}\vec{S_i}$，即:<br>$$<br>\begin{align}<br>bit &amp;= signal \cdot \frac{1}{m} \vec{S_i} \<br>若bit &amp;= 1, \quad &amp;站点i该位发送的是1 \<br>若bit &amp;= -1, \quad &amp;站点i该位发送的是0 \<br>若bit &amp;= 0, \quad &amp;站点i没有发送该位<br>\end{align}<br>$$</p><blockquote><p>一个具有$n$位码片序列的系统，最多支持$n$个站点同时收发。</p></blockquote><blockquote><p>注意到原来每发送一个0/1电平，码片序列需要发送$n$个，于是传输速度会扩大$n$倍。这种形式是<strong>扩频(SS)</strong>(Spread Spectrum)通信的一种。属于扩频通信中的<strong>直接序列扩频(DSSS)</strong>。另一种叫做<strong>跳频扩频(FHSS)</strong>。</p></blockquote><p>码分复用(CDM)的优势:</p><ol><li>各个用户直接不会干扰，也不用分频率、分时间。</li><li>频谱类似白噪声，保密性比较好，只有知道码片序列才能解码出信息。</li><li>抗干扰能力也很强。</li></ol><h2 id="错题">错题</h2><p>6.各种网络在物理层互联时要求（ ）。<br>A.数据传输率和链路层协议相同<br>B.数据传输率相同，链路层协议可不同<br>C.数据传输率可不同，链路层协议相同<br>D.数据传输率和链路层协议都可不同</p><blockquote><p>【答案】A<br>【解析】物理层不具备差错控制和流量控制功能，它所实现的是设备之间如何通过物理传输介质进行连接， 发送或接收原始的数据比特流。因此，如果各种网络在物理层进行互联，它们一定要具有相同的数据传输率和链路层协议，这样才能提供数据传输的准确性。一般说来，差错控制和流量控制功能由数据链路层协议完成。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;Ch2: 物理层&lt;/h1&gt;
&lt;h2 id=&quot;1-1-物理层的基本概念&quot;&gt;1.1 物理层的基本概念&lt;/h2&gt;
&lt;h3 id=&quot;1-1-1-物理层的主要任务&quot;&gt;1.1.1 物理层的主要任务:&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;物理层的传输媒介和通信手段差别很大，种类多</summary>
      
    
    
    
    <category term="网络原理" scheme="http://blog.fragments.work/categories/%E7%BD%91%E7%BB%9C%E5%8E%9F%E7%90%86/"/>
    
    
    <category term="笔记" scheme="http://blog.fragments.work/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>网络原理: 互联网的组成和分类，计算机网络的性能与体系结构</title>
    <link href="http://blog.fragments.work/2024/03/17/ComputerNetwork/Ch1/"/>
    <id>http://blog.fragments.work/2024/03/17/ComputerNetwork/Ch1/</id>
    <published>2024-03-17T10:34:27.000Z</published>
    <updated>2024-03-22T14:51:43.120Z</updated>
    
    <content type="html"><![CDATA[<h1>Ch1: 互联网的组成和分类，计算机网络的性能与体系结构</h1><h2 id="1-1-互联网的组成">1.1 互联网的组成</h2><blockquote><p>互联网主要分为2个部分，分别是</p><ol><li>边缘部分(所有互联网上的<strong>主机</strong>组成，给用户直接使用的部分)</li><li>核心部分(由<strong>网络</strong>和连接网络的<strong>路由器</strong>组成，给边缘部分的主机提供连接服务)</li></ol></blockquote><h3 id="1-1-1-边缘部分">1.1.1 边缘部分</h3><p>边缘部分由<strong>主机</strong>组成，边缘部分中主机和主机之间的通信实际上是<strong>一台主机的进程</strong>和<strong>另一台主机的进程</strong>进行通信。这也被称为是计算机之间的通信。主要有两种计算机之间的通信方式：</p><ol><li>客户-服务器(C/S)方式:<ul><li>由一台服务器时刻监听来自客户机的请求，只需要客户机知道服务器的位置即可。</li><li>建立连接以后通信可以是<strong>双向</strong>的。</li></ul></li><li>对等(P2P)方式<ul><li>两台主机都既是服务器又是客户机。</li></ul></li></ol><h3 id="1-1-2-核心部分：分组与交换">1.1.2 核心部分：分组与交换</h3><p>核心部分由<strong>网络 <strong>和连接网络的</strong>路由器</strong>组成。</p><blockquote><p>路由器是一台专门用于分组交换的<strong>专用</strong>计算机。</p></blockquote><blockquote><p>路由器是<strong>分组交换</strong>的核心部件，任务是转发收到的被分组的信息到相应的目的地。</p></blockquote><blockquote><p><strong>分组交换</strong> = <strong>分组</strong>+<strong>交换</strong></p></blockquote><h4 id="1-2-1-1-分组">1.2.1.1 分组</h4><blockquote><p>定义$1.1.2.1$ <strong>分组</strong>: 是指我们要发送的整段数据(报文)会被划分成一段段更小的数据段，每一个小数据段加上段首信息就组成一个<strong>分组</strong>，也被称为<strong>包</strong>。</p></blockquote><p>路由器收到的都是一个个<strong>分组</strong>，在暂存以后会转发出去。</p><h4 id="1-2-1-2-交换">1.2.1.2 交换</h4><p>“交换&quot;来源于早期的&quot;电路交换”。</p><blockquote><p>把$n$部电话两两相接在一起一共需要$n(n-1)/2$条线路。</p></blockquote><p>这么多线路显然是不能接受的。因此引入<strong>交换机</strong>。</p><blockquote><p>只要把一个区域内的$n$步电话都先连接到<strong>交换机</strong>，当两部电话需要通信时，交由交换机建立连接通话。</p></blockquote><p>对于相对较远的两个区域，则将这两个区域的交换机相连接，构成一张由<strong>交换机</strong>连接的电话网络的<strong>网络</strong>。</p><p>路由器做的也是类似的事情，互联网是<strong>路由器</strong>连接的网络的大网络，收到分组信息并暂存后，路由器查找转发表，将分组信息转发到下一个路由器，最后抵达目的地址所在的路由器。</p><p>不过电话交换的特点在于<strong>建立连接</strong>。电话交换需要经过3个步骤:<br>$$<br>建立连接\to 通话 \to 释放连接<br>$$<br>在这个过程中，某一个链路和其中的资源会<strong>一直</strong>被通信的用户<strong>独占</strong>。互联网的通信如果依照这种方式，传输的资源利用率很低。因为网络通信主要是以<strong>突发</strong>的信息传输为主。</p><p>因此网络通信的链路是只有当该链路上正在传送信息时才被占用。</p><p>另外，还有一种用于电报的<strong>报文交换</strong>  -&gt; 类似于不分组的路由交换，整个报文一起在路由器网络中交换。</p><h4 id="1-2-1-3-分组交换的优势与劣势">1.2.1.3 分组交换的优势与劣势</h4><blockquote><p>优势:</p><ol><li>分组在一段一段<strong>断断续续</strong>地占用链路中传输，还省去了建立连接和释放连接的步骤，传输效率大大提高。</li><li>链路出现故障、拥塞时，路由器可以根据策略灵活调整传输路径，传输的灵活性、鲁棒性更高。</li></ol></blockquote><blockquote><p>劣势:</p><ol><li>通信链路根据实时情况变换，可追踪性不高，比较复杂。</li><li>路由器中转发需要排队，会产生时延。也无法确保端到端的带宽。</li></ol></blockquote><h2 id="1-2-互联网的分类">1.2 互联网的分类</h2><blockquote><p>定义$1.2.1$ [PETE11]：计算机网络主要是由一些通用的，可编程的硬件互连而成，用于传输不同种类的数据。</p></blockquote><h3 id="1-2-1-按照互联网的作用范围-广度-进行分类">1.2.1 按照互联网的作用范围(广度)进行分类</h3><table><thead><tr><th style="text-align:center">互联网类型</th><th style="text-align:center">作用范围</th></tr></thead><tbody><tr><td style="text-align:center"><strong>广域网WAN</strong>(Wide Area Network)</td><td style="text-align:center">几十到几千km(跨国)</td></tr><tr><td style="text-align:center"><strong>城域网MAN</strong>(Metropolitan Area Network)</td><td style="text-align:center">5~50km(一个城市)</td></tr><tr><td style="text-align:center"><strong>局域网LAN</strong>(Local Area Network)</td><td style="text-align:center">1km左右(一个单位，校园网/企业网)</td></tr><tr><td style="text-align:center"><strong>个人区域网PAN</strong>(Personal Area Network)(Wireless PAN)</td><td style="text-align:center">10m左右(一个人用)</td></tr></tbody></table><h3 id="1-2-2-按照互联网的使用者进行分类">1.2.2 按照互联网的使用者进行分类</h3><blockquote><ol><li><strong>公用网</strong>(Public Network): 电信公司/国家出资建造的网络，任何缴纳费用的人都可以使用的网络。</li><li><strong>专用网</strong>(Private Network): 满足特殊单位的特殊网络，不允许外人使用。比如铁路/军用网络。</li></ol></blockquote><h3 id="1-2-3-接入网AN-Access-Network">1.2.3 接入网AN(Access Network)</h3><blockquote><p><strong>接入网</strong>，居民接入网，本地接入网。是某个用户端系统接到互联网中第一个路由器之间的网络。因此它既不属于互联网的边缘部分，也不属于核心部分，是连接边缘和核心的网络。</p></blockquote><h2 id="1-3-计算机网络的性能-star-star-star">1.3 计算机网络的性能($\star\star\star$)</h2><blockquote><p>将从7个不同的方面评价计算机网络的性能。</p></blockquote><h3 id="1-3-1-速率-数据的-font-color-red-额定-font-传送速率-数据率data-rate">1.3.1 速率:数据的<font color="red">额定</font>传送速率(数据率data rate):</h3><blockquote><p>定义$1.3.1.1$ 速率指的是数据的传送速率，它也被称为数据率，用单位$bps(bit \ per \ second)$描述。一般指的是数据的传送的<strong>额定速率</strong>或<strong>标称速率</strong>。</p></blockquote><blockquote><p><font color="red">注意: $bit$前面的$k = 1000,M = 1e6, G = 1e9$</font>，<font color="green">而$B$前的$K=2^{10},M=2^{20},G=2^{30}$</font></p></blockquote><h3 id="1-3-2-带宽-衡量某一信道中的-font-color-red-最大-font-传输速率">1.3.2 带宽: 衡量某一信道中的<font color="red">最大</font>传输速率</h3><p>带宽有两种含义:</p><ol><li>信号与系统中: 某一信道能够传送的频率范围。</li><li>计算机网络中: 某一信道单位时间中最多能通过的数据量。也用单位$bps$表示。</li></ol><blockquote><p>前者为频率表述，后者为时域表述。两者的描述是一致的，比如能传送的频率范围越大，信道中单位时间内能通过的数据量也就越多。</p></blockquote><h3 id="1-3-3-吞吐量-衡量网络中-font-color-red-实际-font-的传输速度">1.3.3 吞吐量: 衡量网络中<font color="red">实际</font>的传输速度</h3><blockquote><p>定义$1.3.3.1$ <strong>吞吐量</strong>表示在单位时间内通过这个网络(或信道或接口)的实际的数据量。</p></blockquote><blockquote><p>某个信道的带宽应该是该信道吞吐量的<strong>最大上限值</strong>。</p></blockquote><h3 id="1-3-4-时延">1.3.4 时延</h3><blockquote><p>定义$1.3.4.1 $ <strong>时延</strong>(delay或latency)是指数据从网络的一端<strong>完全</strong>传送到另一端所需要的时间。</p></blockquote><h4 id="1-3-4-1-发送时延-Transmission-Delay">1.3.4.1 发送时延(Transmission Delay)</h4><blockquote><p>定义$1.3.4.1.1$ <strong>发送时延</strong>是指从发送端的主机/路由器<strong>完全发送数据</strong>所需要的时间，因此和数据包的大小呈正相关。且一般发生在网络适配器中，和传输的路径长短没有任何关系。也叫做<strong>传输时延</strong>。<br>$$<br>发送时延 t_1 = \frac{数据大小}{发送数据速率}<br>$$</p></blockquote><h4 id="1-3-4-2-传播时延-Propagation-Delay">1.3.4.2 传播时延(Propagation Delay)</h4><blockquote><p>定义$1.3.4.2.1$ <strong>传播时延</strong>是指电磁波在信道中传播所需要的时间，和信道的<strong>介质</strong>(影响电磁波的传播速率)和信道长度有关。但由于信道的传播有并行性，所以传播时延和数据的大小无关。<br>$$<br>传播时延t_2=\frac{传播距离}{传播速率}<br>$$</p></blockquote><h4 id="1-3-4-3-处理时延">1.3.4.3 处理时延</h4><blockquote><p>定义$1.3.4.3.1$ <strong>处理时延</strong>是指主机和路由器在收到分组的信息后需要一定时间进行处理，比如整合数据分组、分析分组的首部信息、提取信息以及检错等等步骤所带来的时延。</p></blockquote><h4 id="1-3-4-4-排队时延">1.3.4.4 排队时延</h4><blockquote><p>定义$1.3.4.4.1$ <strong>排队时延</strong>指的是当分组经过某些路由器时，路由器中正在处理其他分组，本分组只能等待。等待所产生的时延就是排队时延。排队时延往往取决于网络当时的阻塞程度和通信量。</p></blockquote><p>当排队队列超过限制的时候，就免不了有一些分组因为队列溢出而丢失。那么这些分组的排队时延可以视作<strong>无穷大</strong>。</p><h4 id="1-3-4-5-总时延">1.3.4.5 总时延</h4><p>显然总时延为上述4种时延之和:<br>$$<br>总时延 = 发送时延 + 传播时延 + 处理时延 + 排队时延<br>$$</p><blockquote><p><font color="red">需要注意的是:</font> 总时延中的决定性力量要视情况而定，因此有时候提升了某一种时延总时延减小的效果很大而有时候却几乎没什么变化。</p></blockquote><h3 id="1-3-5-传播时延带宽积">1.3.5 传播时延带宽积</h3><blockquote><p>定义$1.3.5.1$ 定义一条信道的<strong>传播时延带宽积</strong>(时延带宽积)：<br>$$<br>传播时延带宽积 = 传播时延 \times 带宽<br>$$</p></blockquote><p><img src="https://img2020.cnblogs.com/blog/1808215/202012/1808215-20201212155517477-1352271527.png" alt="传播时延带宽积"></p><p>这个量的物理含义是如果源源不断地发送数据，当发送端发送的第一个比特即将到达接收端时，该信道中存在的比特数。这些比特都在以接收端为目的地向前运动。(就像是从水管中源源不断地抽水，水管里的水的数量)</p><blockquote><p>只有当信道里充满比特的时候，信道的利用才比较完全。</p></blockquote><h3 id="1-3-6-往返时间RTT-Round-Trip-Time">1.3.6 往返时间RTT(Round-Trip Time)</h3><blockquote><p>定义$1.3.6$ <strong>往返时间</strong>是指发送方发送完最后一个数据以后，直到发送方再次接收到接收方发来的确认消息所需要的时间。往往假定<strong>确认消息的数据量非常小，接收端发送确认消息的时间为0</strong>。</p></blockquote><p>因此往返时间一般是这样计算的:<br>$$<br>往返时间RTT = 传播时延 +  接收端排队时延 + 接收端处理时延 +传播时延 = 传播时延*2 + 接收端排队时延 + 接收端处理时延<br>$$<br>应用往返时间可以计算得到真正的有效数据速率:<br>$$<br>有效数据速率 = \frac{发送数据量}{发送时延 + 往返时间RTT}<br>$$</p><h3 id="1-3-7-利用率">1.3.7 利用率</h3><blockquote><p>定义$1.3.7.1$ <strong>信道利用率</strong>定义为某个信道有多少比例的时间是被利用的(有数据通过)。</p></blockquote><blockquote><p>定义$1.3.7.2$ <strong>网络利用率U</strong>定义为网络中每一个信道的利用率的<strong>平均值</strong>。</p></blockquote><blockquote><p>公式$1.3.7.1$ 理想情况下，<strong>网络利用率U</strong>和网络的时延的关系有：<br>$$<br>\frac{D_0}{D} = 1-U \Leftrightarrow U =1 - \frac{D_0}{D}<br>$$<br>其中$D_0$表示某一数据量在该网络完全空闲时的时延，$D$表示相同数据量的数据在当前网络状态下的时延。</p></blockquote><p><img src="https://img2020.cnblogs.com/blog/1808215/202012/1808215-20201212160108590-911020597.png" alt="1808215-20201212160108590-911020597.png (802×314) (cnblogs.com)"></p><blockquote><p><font color="red">注意：</font>利用率并非越大越好，从上图可以看出利用率加大，时延上升的比较快。利用率50% 时延变为2倍。因此基本上控制利用率不超过50%。</p></blockquote><h3 id="1-3-8-一些非量化的性能指标">1.3.8 一些非量化的性能指标</h3><ol><li>成本与价格</li><li>质量</li><li>标准化</li><li>可靠性</li><li>可扩展和可升级性</li><li>可管理和维护性</li></ol><h2 id="1-4-计算机网络体系结构-Architecture">1.4 计算机网络体系结构(Architecture)</h2><p>实践来看，计算机网络设计成一个分层模块组装起来的大模块比较合适。</p><p>分层的好处在于:</p><ol><li>各层之间独立，复杂问题模块化</li><li>灵活性好</li><li>结构上可以分割开</li><li>实现简单，可维护性高</li><li>利于标准化工作</li></ol><p>每一层都需要实现以下功能的一种或是几种:</p><ol><li>差错控制</li><li>流量控制</li><li>分段与重装(发送端把数据分为小段，而接收端重组他们)</li><li>复用和分用(发送端多个高层同时使用同一个低层，接收端则把底层的信号一个个分开，分给不同的高层)</li><li>建立连接和释放(建立和释放逻辑连接)</li></ol><p>但分层也有缺点，比如有的功能会在好几层都出现，造成冗余。</p><blockquote><p>**计算机体系结构(Architecture)**指的是计算机各层极其协议的集合。也就是这个计算机网络每一层的所要完成的功能的定义。</p></blockquote><blockquote><p><strong>计算机体系结构</strong>是一个<strong>抽象</strong>的概念，而<strong>计算机网络</strong>是按照体系结构的某一种具体实现，是一个<strong>具体</strong>的实现。</p></blockquote><h3 id="1-4-0-实体、协议、服务和服务访问点">1.4.0 实体、协议、服务和服务访问点</h3><blockquote><p>定义$1.4.0.1$ <strong>实体</strong>(entity)指的是任何能够发送或者是接受信息的硬件和软件进程。是一个抽象的概念。</p></blockquote><blockquote><p>定义$1.4.0.2$ <strong>协议</strong>(protocol)指的是发送端和接收端<strong>同一层</strong>之间为了进行数据交换而建立的规则、标准或约定，进而可以向上一层提供服务，可能要用到下一层的服务。</p><p>主要由:</p><ol><li>语法: 数据与控制信息的格式</li><li>语义: 要发出何种控制信息、何种动作、何种响应</li><li>同步: 事件的顺序</li></ol><p>组成。</p></blockquote><blockquote><p>定义$1.4.0.3$ <strong>服务</strong>(serve)指的是由下层向上层通过服务接口提供的。上下层之间进行交互的地方叫做<strong>服务访问点SAP</strong>(Server Access Point)，层与层之间的数据交换单位称为<strong>服务数据单元SDU</strong>(Serve Data Unit)。</p></blockquote><blockquote><p><font color ="red">协议是水平的，服务是垂直的。</font></p></blockquote><h3 id="1-4-1-OSI-7层协议体系结构模型">1.4.1 OSI 7层协议体系结构模型</h3><h3 id="1-4-2-TCP-IP-4层协议体系结构模型">1.4.2 TCP/IP 4层协议体系结构模型</h3>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;Ch1: 互联网的组成和分类，计算机网络的性能与体系结构&lt;/h1&gt;
&lt;h2 id=&quot;1-1-互联网的组成&quot;&gt;1.1 互联网的组成&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;互联网主要分为2个部分，分别是&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;边缘部分(所有互联网上的&lt;strong&gt;主</summary>
      
    
    
    
    <category term="网络原理" scheme="http://blog.fragments.work/categories/%E7%BD%91%E7%BB%9C%E5%8E%9F%E7%90%86/"/>
    
    
    <category term="笔记" scheme="http://blog.fragments.work/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>Week3: 词法分析</title>
    <link href="http://blog.fragments.work/2024/03/17/PrincipleofCompiling/compilation-Week3/"/>
    <id>http://blog.fragments.work/2024/03/17/PrincipleofCompiling/compilation-Week3/</id>
    <published>2024-03-17T06:02:22.000Z</published>
    <updated>2024-03-17T06:43:58.968Z</updated>
    
    <content type="html"><![CDATA[<h1>Week3: 词法分析</h1><h2 id="0-词法分析的模式和主要功能">0. 词法分析的模式和主要功能</h2><h3 id="0-1-词法分析的工作方式">0.1: 词法分析的工作方式:</h3><p>词法分析程序主要有两种工作方式:</p><ol><li>词法分析和语法分析完全分开，变为两个等地位的模块，词法分析的输出作为语法分析的输入，词法分析和语法分析一共至少扫描文本两遍。</li><li>词法分析作为语法分析的调用子模块，每当语法分析需要读入一个单词时，调用词法分析子模块从字符流种读入一个单词。词法分析和语法分析放在一起扫描文本一遍。<font color="red">一般采用的都是这个方式。</font></li></ol><h3 id="0-2-词法分析程序的输出">0.2: 词法分析程序的输出:</h3><p>词法分析程序每次从字符流中取出一个字符时，以<strong>单词符号</strong>的形式发送至语法分析程序。</p><blockquote><p><strong>单词符号</strong>是一个二元组**(单词种别，单词本身的值)<strong>，其中单词的种别往往用整数编码来表示，单词本身的值是用来区分单凭单词种别无法区分的单词。比如<code>const int i=1,j = 25</code>，$1$和$25$都是常量，但是需要有单词本身的值来区分。特别的，一般标识符本身的值往往是</strong>单词符号表中的指针**。</p></blockquote><h3 id="0-3-词法分析的主要功能">0.3: 词法分析的主要功能:</h3><p>词法也是语法的一部分，但是仍旧将词法分析和语法分析分开的原因是：</p><ol><li>使编译程序的结构更加清楚明了</li><li>改进编译程序的效率</li><li>增加编译程序的可移植、可维护性。</li></ol><p>除了1. 识别单词，词法分析还具有：</p><ol start="2"><li>滤去注释与空格</li><li>记录新读入的字符和行号</li><li>宏展开</li><li>词法分析的预处理…</li></ol><h3 id="0-4-用来描述词法规则的工具">0.4 用来描述词法规则的工具</h3><p>描述词法规则的工具主要有：</p><ol><li>状态转换图</li><li>扩展巴科斯范式(EBNF)</li><li>正规文法($\star$)</li><li>正规表达式($\star$)</li><li>有限状态自动机($\star$)</li></ol><h2 id="1-正规文法">1. 正规文法</h2><p>3型文法$G(V_N,V_T,P,S)$(左线性/右线性)能够描述一个正规集。</p><h2 id="2-正规表达式">2. 正规表达式</h2><h3 id="2-1-正规式和正规集的定义">2.1 正规式和正规集的定义:</h3><p>正规表达式所表示的正规式和正规集一般用递归定义：</p><blockquote><p>定理$2.1.1$ 运算符号的优先级为: $^* &gt; \cdot &gt; |$ 。并且$^*,\cdot,|$都是<strong>左结合</strong>的。</p><p>左结合： 相同优先级的运算符的运算顺序: $a\cdot b\cdot c=(a\cdot b)\cdot c$</p></blockquote><blockquote><p>例$2.1.1$ $ d^<em>(.dd^</em>|\varepsilon)(e(+|-|\varepsilon)dd^*|\varepsilon)$表示一个无符号数。</p></blockquote><blockquote><p>配合ppt中例题使用</p></blockquote><h3 id="2-2-正规式的代数规律-运算符的性质">2.2 正规式的代数规律(运算符的性质):</h3><p>$$<br>\begin{align}<br>&amp;a | b | c = (a | b) | c = a | (b | c) &amp;|的结合率\\\\<br>&amp;a | b = b | a &amp;|的交换律 \\\\<br>&amp;a | a = a &amp;|的抽取律 \\\\<br>&amp;a \cdot b \cdot c = (a \cdot b) \cdot c = a \cdot (b \cdot c) &amp;\cdot的结合律 \\\\<br>&amp; \varepsilon \cdot a=a \cdot \varepsilon = a &amp;\varepsilon是\cdot上的幺元 \\\\<br>&amp;(a|b)\cdot c = a\cdot c \ | \ b \cdot c, \ c \cdot(a|b) = c\cdot a \ | \ c \cdot b &amp;\cdot在|上的分配律<br>\end{align}<br>$$</p><blockquote><p>引申性质:</p></blockquote><p>$$<br>\begin{align}<br>r^* &amp;= (r | \varepsilon)^* \ (a | b)^* &amp;= (a^<em>b^</em>)^*<br>\end{align}<br>$$</p><h3 id="2-3-正规式和正规文法的等价性">2.3 正规式和正规文法的等价性</h3><blockquote><p>如果正规式$e$所表达的字符串的正规集$L[e]$和正规文法$G[S]$所表达的正规语言$L[G]$相等，则说该正规式和该正规文法等价。</p></blockquote><h3 id="2-3-1-正规式和正规文法的相互转换">2.3.1 正规式和正规文法的相互转换</h3><table><thead><tr><th>规则</th><th>正规式</th><th>正规文法</th></tr></thead><tbody><tr><td>规则1:<strong>顺序</strong></td><td>$ab$</td><td>$A \to aB, B \to b$</td></tr><tr><td>规则2:<strong>选择</strong></td><td>$a</td><td>b$</td></tr><tr><td>规则3:<strong>循环</strong></td><td><font color="red">$ab^*$</font>/<font color="blue">$a^*b$</font></td><td><font color="red">$A \to aB,B \to bB</td></tr></tbody></table><blockquote><p>注意: 注意正规文法的左/右线性要保持好！不能混用！</p></blockquote><h2 id="3-有穷自动机">3. 有穷自动机</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;Week3: 词法分析&lt;/h1&gt;
&lt;h2 id=&quot;0-词法分析的模式和主要功能&quot;&gt;0. 词法分析的模式和主要功能&lt;/h2&gt;
&lt;h3 id=&quot;0-1-词法分析的工作方式&quot;&gt;0.1: 词法分析的工作方式:&lt;/h3&gt;
&lt;p&gt;词法分析程序主要有两种工作方式:&lt;/p&gt;
&lt;ol&gt;
&lt;</summary>
      
    
    
    
    <category term="编译原理" scheme="http://blog.fragments.work/categories/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/"/>
    
    
    <category term="笔记" scheme="http://blog.fragments.work/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>离散数学第一章: 数理逻辑</title>
    <link href="http://blog.fragments.work/2024/03/16/discreteMathmatics/Ch1/"/>
    <id>http://blog.fragments.work/2024/03/16/discreteMathmatics/Ch1/</id>
    <published>2024-03-16T05:30:00.000Z</published>
    <updated>2024-03-17T06:47:29.692Z</updated>
    
    <content type="html"><![CDATA[<h1>数理逻辑</h1><h2 id="1-断言与命题">1. 断言与命题</h2><h3 id="1-1-断言">1.1 断言</h3><blockquote><p>定义: 断言是一个陈述句。</p></blockquote><hr><h3 id="1-2-命题">1.2 命题</h3><blockquote><p>定义: 命题是一个有<strong>明确真假</strong>的断言。</p></blockquote><blockquote><p>如果有的断言不可以被指定真假，比如&quot;我说的是假的&quot;，这种断言叫做&quot;悖论&quot;。</p></blockquote><blockquote><p>定义: 不能再被分解的最简单的命题叫做<strong>原子命题</strong>或<strong>本原</strong>命题。</p></blockquote><p>命题之间可以用命题连接词连接，形成新的命题。</p><hr><h3 id="1-3-命题连接词">1.3 命题连接词</h3><blockquote><p>运算顺序: $\neg \ &gt; \   \wedge \ &gt;\   \vee &gt; \ \to \ &gt; \ \leftrightarrow$</p></blockquote><h4 id="否定连接词-neg">否定连接词$\neg$</h4><h4 id="合区词-wedge">合区词$\wedge$</h4><h4 id="析取词-vee-：可兼或">析取词$\vee$ ：可兼或</h4><h4 id="蕴含词-rightarrow">蕴含词$\rightarrow$</h4><p>$P \to Q$和以下说法均等价:</p><ol><li>如果$P$，那么$Q$</li><li>$P$是$Q$的充分条件</li><li>$Q$是$P$的必要条件</li><li>$P$仅当$Q$</li><li>$Q$每当$P$</li></ol><h4 id="等值词-leftrightarrow">等值词$\leftrightarrow$</h4><p>$P \leftrightarrow Q \Leftrightarrow P\to Q \wedge Q \to P$</p><p>并且$P \leftrightarrow Q$等价于:</p><ol><li>$P$是$Q$的充要条件</li><li>$Q$是$P$的充要条件</li><li>$P$当且仅当$Q$</li><li>$Q$当且仅当$P$</li></ol><hr><h3 id="1-4-命题公式">1.4 命题公式</h3><blockquote><p>若变元$P$的值域为真值域${True,False}$，就叫做命题变元。</p></blockquote><blockquote><p>若常量值$T/F$代表真值$True$或$False$，则$T/F$称为命题常元。</p></blockquote><blockquote><p>定义: 单个命题变元和单个命题常元叫做原子公式。</p></blockquote><blockquote><p>归纳定义:</p><p>①. 单个原子公式是命题公式</p><p>②. 若$P$和$Q$都是命题公式，则…也是命题公式。</p><p>③. 只有有限步使用上述规则得到的公式才是命题公式。</p></blockquote><p>上述归纳定义得出的公式也叫做<strong>合式公式</strong>。</p><h3 id="1-5-命题的逻辑等价">1.5 命题的逻辑等价</h3><p>如果命题公式$P$和$Q$在所有指派下都具有相同的真值，则$P$和$Q$逻辑等价。</p><p>可记作$P \Leftrightarrow Q$，$P$和$Q$逻辑恒等。</p><hr><h2 id="2-重言式-永真式">2. 重言式(永真式)</h2><p>对于一个具有$n$个变元的命题公式$A(\alpha_1,\alpha_2,\cdots,\alpha_n)$,变元$\alpha_i$的真值一共有$2^n$种，每一种组合叫做一种<strong>指派</strong>。</p><blockquote><p>定义: 对于每一种指派，如果命题公式$A$的真值都是真，则命题公式$A$是一个重言式(永真式)。</p></blockquote><blockquote><p>定义: 对于每一种指派，如果命题公式$A$的真值都是假，则命题公式$A$是一个矛盾式(永假式)。</p></blockquote><blockquote><p>定义: 对于不同指派，如果命题公式$A$的真值有真有假，则命题公式$A$是一个偶然式。</p></blockquote><ul><li>永真蕴含式和恒等式具有传递特性，即$A \Rightarrow B, B \Rightarrow C$,则$A \Rightarrow C$；$A \Leftrightarrow B, B \Leftrightarrow C$,则$A \Leftrightarrow C$。</li><li>永真蕴含式有如下特性:$A \Rightarrow B, A \Rightarrow C$，则$A \Rightarrow B \wedge C$。</li></ul><h3 id="2-1-代入规则-重言式中的变元代入为任意公式">2.1 代入规则: 重言式中的变元代入为任意公式</h3><p>一个<strong>永真式</strong>$P(a_1,a_2,\cdots,a_n)$有$n$个变元，则将其中任意变元所在的<strong>所有</strong>位置用任意公式代入后，得到另一<strong>永真式</strong>$P’$。</p><p>注意，<strong>永真式</strong>使用代入规则后还是<strong>永真式</strong>，但是偶然式不一定！</p><h3 id="2-2-替换规则-用逻辑恒等式替换公式">2.2 替换规则: 用逻辑恒等式替换公式</h3><blockquote><p>定义： 若一个公式$C$是公式$P$中其中完整的一部分，则称$C$是公式$P$的子公式。</p></blockquote><p>若存在逻辑恒等式$C \Leftrightarrow D$，则可以将公式$P$中的子公式$C$替换为公式$D$，如此得到公式$P’$，且$P \Leftrightarrow P’$。</p><h3 id="2-3-对偶公式">2.3 对偶公式</h3><blockquote><p>定义:</p></blockquote><p>对公式$A(a_1,a_2,\cdots,a_n)$，定义其对偶公式$A^*$为:</p><p>$$<br>\begin{align}<br>公式A中: \\  \wedge 换为 \vee \\ \vee 换为 \wedge \\ T 换为 F \\ F 换为T \\ 得到新公式A^*(a_1,a_2,\cdots,a_n)<br>\end{align}<br>$$</p><blockquote><p>定理: $\neg A(a_1,a_2,\cdots,a_n) =  A^*(\neg a_1, \neg a_2,\cdots, \neg a_n)$</p></blockquote><blockquote><p>延申定理: 当$A$和$B$都为变元$(a_1,a_2,\cdots,a_n)$的命题公式时:</p></blockquote><p>$$<br>A \to B \Leftrightarrow B^* \to A^* \\ A \leftrightarrow B \Leftrightarrow A^* \leftrightarrow B^*<br>$$</p><h2 id="3-范式">3. 范式</h2><h3 id="3-1-基本积与基本和">3.1 基本积与基本和</h3><blockquote><p>定义：一些命题变元和一些命题变元的否定之积(合取)，称为基本积。</p><p>定理： 当一个基本积是永假式，当且仅当这个基本积中包含$P$和$\neg P$。</p></blockquote><blockquote><p>定义：一些命题变元和一些命题变元的否定之和(析取)，称为基本和。</p><p>定理：当一个基本和是永真式，当且仅当这个基本和中包含$P$和$\neg P$。</p></blockquote><h3 id="3-2-析取范式和合取范式">3.2 析取范式和合取范式</h3><blockquote><p>定义$3.2.1$：如果存在一个由基本积的析取形成的公式$A’$和公式$A$等价，即:<br>$$<br>A \Leftrightarrow A’ = A_1 \vee A_2 \vee \cdots \vee A_n<br>$$<br>其中$A_i$为基本积，则称$A’$是公式$A$的<strong>析取范式</strong>(积之和)。其中含有最少运算符的析取范式叫做<strong>最简析取范式</strong>。(用卡诺图可化简)</p></blockquote><blockquote><p>定义$3.2.2$ ：如果存在一个由基本和的合取形成的公式$B’$和公式$B$等价，即:<br>$$<br>B \Leftrightarrow B’ = B_1 \wedge B_2 \wedge \cdots \wedge B_n<br>$$<br>其中$B_i$为基本和，则称$B’$是公式$B$的<strong>合取范式</strong>(和之积)。其中运算符个数最少的合取范式叫做<strong>最简合取范式</strong>。(先求$B^*$的最简析取式)</p></blockquote><h3 id="3-3-极小项和极大项">3.3 极小项和极大项</h3><blockquote><p>定义$3.3.1$：对于一个$n$元命题公式$A(a_1,a_2,\cdots,a_n)$，假如基本积中每个变元或该变元的逆不同时出现，并且只出现其中的一个，则这个基本积叫做命题公式$A$的<strong>极小项</strong>。</p></blockquote><p>显然$n$元命题公式$A(a_1,a_2,\cdots,a_n)$有且仅有$2^n$个极小项，可以用二进制数对应这些极小项，对应用$m_i$表示：<br>$$<br>\begin{align}<br>\neg a_1 \wedge \neg a_2 \wedge \cdots \wedge \neg a_n  -----&gt; 00\cdots0(m_0) \\<br>a_1 \ \ \wedge a_2 \ \wedge \cdots \wedge a_n \ \ -----&gt; 11\cdots1(m_{2^n -1})<br>\end{align}<br>$$</p><blockquote><p>性质$3.3.1$：<br>$$<br>m_i \wedge m_j \Leftrightarrow F(i \ne j) \\ \mathop{\vee}\limits_{i=0}^{2^n-1}m_i \Leftrightarrow T<br>$$</p></blockquote><blockquote><p>定义$3.3.2$：对于一个$n$元命题公式$A(a_1,a_2,\cdots,a_n)$，假如基本和中每个变元或该变元的逆不同时出现，并且只出现其中的一个，则这个基本和叫做命题公式$A$的<strong>极大项</strong>。</p></blockquote><p>$n$元命题公式$A(a_1,a_2,\cdots,a_n)$同样也有$2^n$个极大项，也用二进制数表示极大项(表示方式和极小项相反)，但用$M_i$表示:<br>$$<br>\begin{align}<br>a_1 \ \ \wedge a_2 \ \wedge \cdots \wedge a_n \ \ -----&gt; 00\cdots0(M_{0}) \\<br>\neg a_1 \wedge \neg a_2 \wedge \cdots \wedge \neg a_n  -----&gt; 11\cdots1(M_{2^{n}-1})<br>\end{align}<br>$$</p><blockquote><p>性质$3.3.2$：<br>$$<br>M_i \vee M_j \Leftrightarrow T(i \ne j) \\ \mathop{\wedge}_{i=0}^{2^n-1}M_i \Leftrightarrow F<br>$$</p></blockquote><blockquote><p>性质$3.3.3$：<br>$$<br>\neg m_i \Leftrightarrow M_i \\ \neg M_i \Leftrightarrow m_i<br>$$</p></blockquote><h3 id="3-4-主析取范式和主合取范式">3.4 主析取范式和主合取范式</h3><blockquote><p>定义$3.4.1$：如果一个析取范式中的基本积全都是极小项，那么这个析取范式叫做<strong>主析取范式</strong>。</p></blockquote><blockquote><p>定义$3.4.2$：如果一个合取范式中的基本和全都是极大项，那么这个合取范式叫做<strong>主合取范式</strong>。</p></blockquote><p>每一个命题公式$A$都对应一个<strong>真值表</strong>，也对应一个<strong>主析取范式</strong>和<strong>主合取范式</strong>。</p><blockquote><p>对于$n$元命题$A(a_1,a_2,\cdots,a_n)$共有$2^n$个极大项/极小项，可以组合出$2^{2^n}$种主合取范式/主析取范式/真值表，因此一共有$2^{2^n}$种$n$变元命题。</p></blockquote><h2 id="4-连结词的扩充与规约">4. 连结词的扩充与规约</h2><h3 id="4-1-连结词的扩充">4.1 连结词的扩充</h3><p>二元运算还可以定义有意义的几个运算：<br>$$<br>与非: P\uparrow Q \Leftrightarrow<br>$$</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;数理逻辑&lt;/h1&gt;
&lt;h2 id=&quot;1-断言与命题&quot;&gt;1. 断言与命题&lt;/h2&gt;
&lt;h3 id=&quot;1-1-断言&quot;&gt;1.1 断言&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;定义: 断言是一个陈述句。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h3 id=&quot;1-2-命题</summary>
      
    
    
    
    <category term="离散数学" scheme="http://blog.fragments.work/categories/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/"/>
    
    
    <category term="笔记" scheme="http://blog.fragments.work/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>编译原理Week2： 文法、句型、句子、语言和文法的类型</title>
    <link href="http://blog.fragments.work/2024/03/15/PrincipleofCompiling/compilation-Week2/"/>
    <id>http://blog.fragments.work/2024/03/15/PrincipleofCompiling/compilation-Week2/</id>
    <published>2024-03-15T14:09:29.000Z</published>
    <updated>2024-03-17T06:43:08.335Z</updated>
    
    <content type="html"><![CDATA[<h1>Week2: 文法、句型、句子、语言和文法的类型</h1><blockquote><p>一门高级语言是一个记号系统，需要定义语言和语义两部分。</p></blockquote><h2 id="1-符号串上的运算">1. 符号串上的运算:</h2><h3 id="1-0-符号串的长度">1.0 符号串的长度</h3><p>$x$为一串，则$|x|$为$x$所占字符表中，字符的个数</p><h3 id="1-1-符号串的-固有-头和-固有-尾，-真-前缀和-真-后缀">1.1 符号串的(固有)头和(固有)尾，(真)前缀和(真)后缀</h3><p>若$z = xy$，则$x$为$z$的头(前缀)，注意$x$可以为<font color="red">$\varepsilon$</font></p><p>$x$为$z$的头，且$x \ne z$，则$x$为$z$的固有头/真前缀</p><h3 id="1-2-符号串的连接。">1.2 符号串的连接。</h3><p>$x$,$y$为两个符号串,$z = xy$，$|z| = |x| + |y|$<br>$$<br>x = \varepsilon x=x \varepsilon<br>$$</p><h3 id="1-3-符号串的方幂">1.3 符号串的方幂</h3><p>$x^n$表示将串$x$重复连接$n$次<br>$$<br>x^0=\varepsilon \ x^mx^{n-m}=x^{n-m}x^m=x^n,\quad n\ge m<br>$$</p><h3 id="1-4-符号串集">1.4 符号串集</h3><blockquote><p>定义: 如果集合$<span class="md-search-hit">A</span>$中所有的元素都是定义在符号表$\Sigma $上的符号串，则称集合$<span class="md-search-hit">A</span>$为定义在字符表$ \Sigma $的符号串集合</p></blockquote><blockquote><p>定义两个符号串的乘积: $A \times B = {xy|x\in A,y \in B}$</p></blockquote><p>$$<br>{\varepsilon} \times A = A<br>$$</p><p>已有符号集$\Sigma$,根据集合乘积的定义，可得到集合的方幂$\Sigma^n$</p><p>其中:<br>$$<br>\Sigma^0 = {\varepsilon}<br>$$<br>定义闭包:<br>$$<br>\Sigma^*=\Sigma^0 \cup \Sigma^1 \cup \Sigma^2 \cup \Sigma^3 \cup …<br>$$<br>定义正闭包:<br>$$<br>\Sigma^+=\Sigma^1 \cup \Sigma^2 \cup \Sigma^3 \cup …<br>$$</p><p>$$<br>\Sigma ^* = \Sigma^+ \cup \Sigma^0 \<br>\Sigma ^+ = \Sigma^\ \times \Sigma^*<br>$$</p><h2 id="2-文法的定义-V-N-V-T-P-S">2. 文法的定义: ($V_N,V_T,P,S$)</h2><p>对于某一<strong>语言</strong>，能够使用的是语言当中的<strong>句子</strong>，如果这些句子是有穷的，对于该语言可以列出一个有限大的句子集合。</p><p>但是有的语言当中的句子是无穷的，因此需要有限数量的<strong>文法</strong>来描述<strong>无穷</strong>数量的句子。</p><blockquote><p>文法: 用有穷集合描述无穷集合的工具。</p></blockquote><p><strong>文法</strong>由<font color="blue">非空有穷</font>集合**$V_N,V_T,P$**和一个起始符$S$构成。</p><h3 id="2-1-非终结符集-V-N-（non-terminal-symbols">2.1 非终结符集$V_N$（non-terminal symbols)</h3><p><strong>非终结符</strong>的含义是，能够<font color = "red">继续被替换下去的符号</font>。</p><ul><li><p>rule:</p><ol><li><p>一般用尖括号<font color="red">“&lt;&gt;”</font>扩起非终结符。</p></li><li><p>一般用<strong>大写字母</strong>表示非终结符。</p></li></ol></li></ul><h3 id="2-2-终结符集-V-T-terminal-symbols">2.2 终结符集$V_T$(terminal symbols)</h3><p><strong>终结符</strong>的含义是，不能够继续被替换的符号。</p><ul><li><p>rule:</p><pre><code>  1. 一般不用尖括号扩起。  1. 一般用**小写字母**表示终结符</code></pre></li></ul><h3 id="2-3-规则集-P-prescriptions">2.3 规则集$P$(prescriptions)</h3><blockquote><p>定义：</p></blockquote><p>规则(重写规则/产生式/生成式)，是一种形如$\alpha \to \beta$,$\alpha ::= \beta$,$(\alpha,\beta)$的有序对。<font color="blue">读作:$\alpha$定义为$\beta$</font></p><p><font color = "red">其中$\alpha$是规则的左部，$\alpha \in (V_N \cup V_T)^*,且至少包含一个非终结符$</font></p><p><font color = "red">$\beta$是规则的右部，$\beta \in (V_N \cup V_P)^*$</font></p><h3 id="2-4-识别符-开始符-S">2.4 识别符(开始符)$S$</h3><blockquote><p>定义:</p></blockquote><p>识别符$S$是一个<strong>非终结符</strong>，即$S \in V_N$。</p><ul><li>rule:<br>1. 识别符$S$至少需要在一条规则中的左部出现。<br>1. 一般<strong>第一条产生式</strong>的左部就是识别符$S$<br>1. 文法$G$还可以表示为$G[S]$，突出识别符$S$</li></ul><h3 id="2-5-字母表-字汇表-V">2.5 字母表(字汇表)V</h3><blockquote><p>定义:</p></blockquote><p>字母表$V = V_N \cup V_T$。</p><p>另外:<br>$$<br>V_N \cap V_T = \varnothing<br>$$<br>故${V_N,V_T}$是$V$的一个划分。</p><h2 id="3-推导">3. 推导</h2><h3 id="3-1-直接推导">3.1 直接推导</h3><blockquote><p>定义:</p></blockquote><p>若规则$\alpha \to \beta$是文法$G$的一条规则，且有$\delta,\gamma \in V^*$,$\exists v,w$满足:<br>$$<br>v = \delta \alpha \gamma \ \ \ \ w=\delta \beta \gamma<br>$$<br>显然，$\delta,\gamma$可以是空串。</p><p>则以下说法等价:</p><ol><li>$v$应用规则$\alpha \to \beta$<strong>直接推导</strong>出$w$</li><li>$w$<strong>直接规约</strong>到$v$</li><li>$w$是$v$的<strong>直接推导</strong></li><li>$v$是$w$的<strong>直接规约</strong></li><li>$v =&gt; w$</li></ol><h3 id="3-2-长度大于0的推导-v-xRightarrow-w">3.2 长度大于0的推导$v \xRightarrow{+} w$</h3><blockquote><p>定义:</p></blockquote><p>如果有推导序列:<br>$$<br>v =&gt; w_1 =&gt; w_2 =&gt; \cdots =&gt; w_n =&gt; w (n&gt;0)<br>$$<br>则称:</p><ol><li>$v$推导到$w$, 长度为$n$</li><li>$w$归约到$w$</li><li>$v \xRightarrow{+} w$</li></ol><h3 id="3-3-长度大于等于0的推导-v-xRightarrow-w">3.3 长度大于等于0的推导$v \xRightarrow{*}w$</h3><blockquote><p>定义:</p></blockquote><p>$v = w 可写作v \xRightarrow{0} w$</p><p>则$v \xRightarrow{+} w$<strong>或者</strong>$v = w$，写作$v \xRightarrow{*}w$，<font color="blue">读作: $v$推导到$w$</font></p><h2 id="4-句型、句子、语言">4. 句型、句子、语言</h2><h3 id="4-1-句型">4.1 句型</h3><blockquote><p>定义:</p></blockquote><p>有文法$G[S]$，对某一$x \in V^<em>$, 若$x$可由识别符$S$推导而来，即:<br>$$<br>S \xRightarrow{</em>} x<br>$$<br>则称$x$为文法$G[S]$的句型。</p><blockquote><p>Hint:</p><p>识别符$S$满足$S \xRightarrow{*} S(S=S)$，但$S$是一个非终结符，故$S$本身是一个句型而不是句子。</p></blockquote><h3 id="4-2-句子">4.2 句子</h3><blockquote><p>定义：</p></blockquote><p>有文法$G[S]$和文法$G[S]$上的句型$x$，如果$x$仅由<font color="red">终结符组成<strong>或者为空串</strong></font>,即:<br>$$<br>S \xRightarrow{<em>} x \wedge x \in (V_T)^</em><br>$$<br>则句型$x$为文法$G[S]$的句子。</p><blockquote><p>句子是不包含非终结符的句型。</p></blockquote><h3 id="4-3-语言-Language">4.3 语言(Language)</h3><blockquote><p>定义:</p></blockquote><p>对文法$G[S]$,<br>$$<br>L[G] = {x| x \in (V_T)^* \wedge S \xRightarrow{*} x }<br>$$<br>则$L[G]$为文法$G[S]$的语言。</p><blockquote><p>文法$G[S]$的语言是该文法一切句子的集合。[<font color="red">包含空串</font>]</p></blockquote><h3 id="4-4-文法的等价">4.4 文法的等价</h3><blockquote><p>定义:</p></blockquote><p>有两个文法$G_1[S_1],G_2[S_2]$,若：<br>$$<br>L[G_1] = L[G_2]<br>$$<br>则称文法$G_1$和文法$G_2$等价。</p><blockquote><p>两个文法等价当且仅当他们能够表示的语言相同。</p></blockquote><h2 id="5-文法的类型">5. 文法的类型</h2><h3 id="5-1-0型文法（短语文法Phrase-Structure-Grammar）-图灵机">5.1  0型文法（短语文法Phrase Structure Grammar）:图灵机</h3><blockquote><p>定义:</p></blockquote><p>对于一文法$G[S]$规则集$P$中的规则$\alpha \to \beta$<font color="red"><strong>都</strong></font>满足:<br>$$<br>\alpha \in V^* 并且\alpha 至少包含一个非终结符 \ \beta \in V^*<br>$$<br>即是一个<strong>0型文法</strong>。</p><blockquote><p>任何0型语言都是递归可枚举的。任何递归可枚举集也都是0型语言。</p></blockquote><h3 id="5-2-1型文法（上下文有关文法-Context-Sensitive-Grammar）-线性界限自动机">5.2 1型文法（上下文有关文法 Context-Sensitive Grammar）:线性界限自动机</h3><blockquote><p>定义:</p></blockquote><p>对于<strong>一个0型文法</strong>$G[S]$，若规则集$P$中的规则$\alpha \to \beta$<font color="red"><strong>都</strong></font>满足:<br>$$<br>|\alpha| \le |\beta| \vee \beta = \varepsilon<br>$$<br>此文法即是一个1型文法。</p><blockquote><p>0型文法规则集中除了$\beta = \varepsilon$的情况，规则右部的长度<em>不小于</em>左部的长度，则文法为一个1型文法。</p></blockquote><h3 id="5-3-2型文法（上下文无关文法-Context-Free-Grammar-下推自动机">5.3 2型文法（上下文无关文法 Context-Free Grammar):  下推自动机</h3><blockquote><p>定义：</p></blockquote><p>对于一个0型文法$G[S]$，对于规则集$P$中的规则<strong>每一个</strong>规则$\alpha \to \beta$，满足:<br>$$<br>\alpha \in V_N \ \beta \in V^*<br>$$<br>即每一条规则都形如$A \to \beta$，该文法为一个2型文法。</p><blockquote><p>每一条规则的左部都是<strong>一个非终结符</strong>的文法就是上下文无关文法。</p></blockquote><blockquote><p><font color="red">上下文无关文法也是上下文有关文法。</font></p></blockquote><h3 id="5-4-3型文法-正规文法-左线性文法-右线性文法-有穷状态自动机">5.4 3型文法 (正规文法:左线性文法/右线性文法) : 有穷状态自动机</h3><blockquote><p>定义:</p></blockquote><p>对于一个文法$G[S]$，规则集中<strong>每一条</strong>规则$\alpha \to \beta$都满足:<br>$$<br>\alpha = A, A\in V_N \ \beta = aB \ \vee \beta = \ a , B \in V_N<br>$$<br>即规则形如$ A\to a$或者 $A \to  aB$。<font color="red">(一定有终结符，且终结符一定在左边，非终结符可有可无。）</font></p><p>此文法为一个3型文法，是一个<strong>右线性文法</strong>。</p><blockquote><p>定义:</p></blockquote><p>对于一个文法$G[S]$，规则集中<strong>每一条</strong>规则$\alpha \to \beta$都满足:<br>$$<br>\alpha = A, A\in V_N \ \beta = Ba \ \vee \beta = \ a , B \in V_N<br>$$<br>即规则形如$ A\to a$或者 $A \to  aB$。<font color="red">(一定有终结符，且终结符一定在右边，非终结符可有可无。）</font></p><p>此文法也是一个3型文法，是一个<strong>左线性文法</strong>。</p><p>但有的规则终结符在左边，有的规则在右边的文法不是3型文法！</p><blockquote><p>显然，3型文法一定是一个上下文无关文法。</p></blockquote><h3 id="5-5-语言的类型">5.5 语言的类型</h3><p>不同种文法产生不同种语言。<br>$$<br>0型文法 \to 0型语言 \ 上下文有关文法 \to 上下文有关语言 \ 上下文无关文法 \to 上下文无关语言 \ 正规文法 \to 正规语言<br>$$</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;Week2: 文法、句型、句子、语言和文法的类型&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;一门高级语言是一个记号系统，需要定义语言和语义两部分。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;1-符号串上的运算&quot;&gt;1. 符号串上的运算:&lt;/h2&gt;
&lt;h3 id=&quot;</summary>
      
    
    
    
    <category term="编译原理" scheme="http://blog.fragments.work/categories/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/"/>
    
    
    <category term="笔记" scheme="http://blog.fragments.work/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
</feed>
